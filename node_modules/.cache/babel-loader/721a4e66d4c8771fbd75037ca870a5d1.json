{"ast":null,"code":"var _jsxFileName = \"/Users/salmon/GitSpace/study/React/nwitter/src/components/AuthForm.js\";\nimport React from \"react\";\n\nconst AuthForm = () => {\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      let data;\n\n      if (newAccount) {\n        //create account\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        // Log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount(prev => !prev);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    required: true,\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    required: true,\n    value: password,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: newAccount ? \"Create Account\" : \"Sign In\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), error), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: toggleAccount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, newAccount ? \"Create Account\" : \"Sign In\"));\n};\n\nexport default AuthForm;","map":{"version":3,"sources":["/Users/salmon/GitSpace/study/React/nwitter/src/components/AuthForm.js"],"names":["React","AuthForm","onChange","event","target","name","value","setEmail","setPassword","onSubmit","preventDefault","data","newAccount","authService","createUserWithEmailAndPassword","email","password","signInWithEmailAndPassword","console","log","error","setError","message","toggleAccount","setNewAccount","prev"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AADJ,QAEFH,KAFJ;;AAGA,QAAIE,IAAI,KAAK,OAAb,EAAsB;AACpBE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAFD,MAEO,IAAID,IAAI,KAAK,UAAb,EAAyB;AAC9BG,MAAAA,WAAW,CAACF,KAAD,CAAX;AACD;AACF,GATD;;AAWA,QAAMG,QAAQ,GAAG,MAAON,KAAP,IAAiB;AAChCA,IAAAA,KAAK,CAACO,cAAN;;AACA,QAAI;AACF,UAAIC,IAAJ;;AACA,UAAIC,UAAJ,EAAgB;AACd;AACAD,QAAAA,IAAI,GAAG,MAAME,WAAW,CAACC,8BAAZ,CACXC,KADW,EAEXC,QAFW,CAAb;AAID,OAND,MAMO;AACL;AACAL,QAAAA,IAAI,GAAG,MAAME,WAAW,CAACI,0BAAZ,CAAuCF,KAAvC,EAA8CC,QAA9C,CAAb;AACD;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD,KAbD,CAaE,OAAOS,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACE,OAAP,CAAR;AACD;AACF,GAlBD;;AAoBA,QAAMC,aAAa,GAAG,MAAM;AAC1BC,IAAAA,aAAa,CAAEC,IAAD,IAAU,CAACA,IAAZ,CAAb;AACD,GAFD;;AAIA,sBACE,uDACE;AAAM,IAAA,QAAQ,EAAEhB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,KAAK,EAAEM,KALT;AAME,IAAA,QAAQ,EAAEb,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,KAAK,EAAEc,QALT;AAME,IAAA,QAAQ,EAAEd,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAiBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAEU,UAAU,GAAG,gBAAH,GAAsB,SAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAqBGQ,KArBH,CADF,eAwBE;AAAM,IAAA,OAAO,EAAEG,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,UAAU,GAAG,gBAAH,GAAsB,SADnC,CAxBF,CADF;AA8BD,CAlED;;AAoEA,eAAeX,QAAf","sourcesContent":["import React from \"react\";\n\nconst AuthForm = () => {\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        //create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // Log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Create Account\" : \"Sign In\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}