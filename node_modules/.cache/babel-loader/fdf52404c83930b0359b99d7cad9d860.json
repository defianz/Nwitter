{"ast":null,"code":"var _jsxFileName = \"/Users/salmon/GitSpace/study/React/nwitter/src/routes/Auth.js\";\nimport AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React, { useState } from \"react\"; // export default () => <Span>Auth</Span>;\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onSocialClick = async event => {\n    const {\n      target: {\n        name\n      }\n    } = event;\n    let provider;\n\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AuthForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    name: \"google\",\n    onClick: onSocialClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Continue with Google\"), /*#__PURE__*/React.createElement(\"button\", {\n    name: \"github\",\n    onClick: onSocialClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Continue with GitHub\")));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/salmon/GitSpace/study/React/nwitter/src/routes/Auth.js"],"names":["AuthForm","authService","firebaseInstance","React","useState","Auth","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSocialClick","event","target","name","provider","auth","GoogleAuthProvider","GithubAuthProvider","data","signInWithPopup","console","log"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,OAA9C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACrC,UAAM;AACJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AADJ,QAEFF,KAFJ;AAGA,QAAIG,QAAJ;;AACA,QAAID,IAAI,KAAK,QAAb,EAAuB;AACrBC,MAAAA,QAAQ,GAAG,IAAIhB,gBAAgB,CAACiB,IAAjB,CAAsBC,kBAA1B,EAAX;AACD,KAFD,MAEO,IAAIH,IAAI,KAAK,QAAb,EAAuB;AAC5BC,MAAAA,QAAQ,GAAG,IAAIhB,gBAAgB,CAACiB,IAAjB,CAAsBE,kBAA1B,EAAX;AACD;;AACD,UAAMC,IAAI,GAAG,MAAMrB,WAAW,CAACsB,eAAZ,CAA4BL,QAA5B,CAAnB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,GAZD;;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAER,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEA,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CAFF,CADF;AAaD,CAjCD;;AAmCA,eAAeT,IAAf","sourcesContent":["import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React, { useState } from \"react\";\n\n// export default () => <Span>Auth</Span>;\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button name=\"google\" onClick={onSocialClick}>\n          Continue with Google\n        </button>\n        <button name=\"github\" onClick={onSocialClick}>\n          Continue with GitHub\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}