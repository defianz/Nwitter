{"ast":null,"code":"import _regeneratorRuntime from\"/Users/salmon/GitSpace/study/React/nwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/salmon/GitSpace/study/React/nwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/salmon/GitSpace/study/React/nwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{authService}from\"fbase\";import React,{useState}from\"react\";var AuthForm=function AuthForm(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),newAccount=_useState6[0],setNewAccount=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var onChange=function onChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;if(name===\"email\"){setEmail(value);}else if(name===\"password\"){setPassword(value);}};var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_context.prev=1;if(!newAccount){_context.next=8;break;}_context.next=5;return authService.createUserWithEmailAndPassword(email,password);case 5:data=_context.sent;_context.next=11;break;case 8:_context.next=10;return authService.signInWithEmailAndPassword(email,password);case 10:data=_context.sent;case 11:console.log(data);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](1);setError(_context.t0.message);case 17:case\"end\":return _context.stop();}}},_callee,null,[[1,14]]);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();var toggleAccount=function toggleAccount(){setNewAccount(function(prev){return!prev;});};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit,className:\"container\"},/*#__PURE__*/React.createElement(\"input\",{name:\"email\",type:\"email\",placeholder:\"Email\",required:true,value:email,onChange:onChange,className:\"authInput\"}),/*#__PURE__*/React.createElement(\"input\",{name:\"password\",type:\"password\",placeholder:\"Password\",required:true,value:password,onChange:onChange,className:\"authInput\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"authInput authSubmit\",value:newAccount?\"Create Account\":\"Sign In\"}),error&&/*#__PURE__*/React.createElement(\"span\",{className:\"authError\"},error)),/*#__PURE__*/React.createElement(\"span\",{onClick:toggleAccount,className:\"authSwitch\"},newAccount?\"Create Account\":\"Sign In\"));};export default AuthForm;","map":{"version":3,"sources":["/Users/salmon/GitSpace/study/React/nwitter/src/components/AuthForm.js"],"names":["authService","React","useState","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","toggleAccount","prev"],"mappings":"geAAA,OAASA,WAAT,KAA4B,OAA5B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,eACKD,QAAQ,CAAC,EAAD,CADb,wCACdE,KADc,eACPC,QADO,8BAEWH,QAAQ,CAAC,EAAD,CAFnB,yCAEdI,QAFc,eAEJC,WAFI,8BAGeL,QAAQ,CAAC,IAAD,CAHvB,yCAGdM,UAHc,eAGFC,aAHE,8BAIKP,QAAQ,CAAC,EAAD,CAJb,yCAIdQ,KAJc,eAIPC,QAJO,eAMrB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,mBAGtBA,KAHsB,CAExBC,MAFwB,CAEdC,IAFc,eAEdA,IAFc,CAERC,KAFQ,eAERA,KAFQ,CAI1B,GAAID,IAAI,GAAK,OAAb,CAAsB,CACpBV,QAAQ,CAACW,KAAD,CAAR,CACD,CAFD,IAEO,IAAID,IAAI,GAAK,UAAb,CAAyB,CAC9BR,WAAW,CAACS,KAAD,CAAX,CACD,CACF,CATD,CAWA,GAAMC,CAAAA,QAAQ,0FAAG,iBAAOJ,KAAP,2HACfA,KAAK,CAACK,cAAN,GADe,oBAITV,UAJS,+CAMER,CAAAA,WAAW,CAACmB,8BAAZ,CACXf,KADW,CAEXE,QAFW,CANF,QAMXc,IANW,oEAYEpB,CAAAA,WAAW,CAACqB,0BAAZ,CAAuCjB,KAAvC,CAA8CE,QAA9C,CAZF,SAYXc,IAZW,uBAcbE,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAda,iFAgBbT,QAAQ,CAAC,YAAMa,OAAP,CAAR,CAhBa,qEAAH,kBAARP,CAAAA,QAAQ,4CAAd,CAoBA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BhB,aAAa,CAAC,SAACiB,IAAD,QAAU,CAACA,IAAX,EAAD,CAAb,CACD,CAFD,CAIA,mBACE,qDACE,4BAAM,QAAQ,CAAET,QAAhB,CAA0B,SAAS,CAAC,WAApC,eACE,6BACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,WAAW,CAAC,OAHd,CAIE,QAAQ,KAJV,CAKE,KAAK,CAAEb,KALT,CAME,QAAQ,CAAEQ,QANZ,CAOE,SAAS,CAAC,WAPZ,EADF,cAUE,6BACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,WAAW,CAAC,UAHd,CAIE,QAAQ,KAJV,CAKE,KAAK,CAAEN,QALT,CAME,QAAQ,CAAEM,QANZ,CAOE,SAAS,CAAC,WAPZ,EAVF,cAmBE,6BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,sBAFZ,CAGE,KAAK,CAAEJ,UAAU,CAAG,gBAAH,CAAsB,SAHzC,EAnBF,CAwBGE,KAAK,eAAI,4BAAM,SAAS,CAAC,WAAhB,EAA6BA,KAA7B,CAxBZ,CADF,cA2BE,4BAAM,OAAO,CAAEe,aAAf,CAA8B,SAAS,CAAC,YAAxC,EACGjB,UAAU,CAAG,gBAAH,CAAsB,SADnC,CA3BF,CADF,CAiCD,CA1ED,CA4EA,cAAeL,CAAAA,QAAf","sourcesContent":["import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        //create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // Log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Create Account\" : \"Sign In\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}