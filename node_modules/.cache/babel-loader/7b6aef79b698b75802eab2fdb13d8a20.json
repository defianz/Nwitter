{"ast":null,"code":"var _jsxFileName = \"/Users/salmon/GitSpace/study/React/nwitter/src/components/NweetFactory.js\";\nimport { dbService, storageService } from \"fbase\";\nimport React from \"react\";\n\nconst NweetFactory = ({\n  userObj\n}) => {\n  const onSubmit = async event => {\n    event.preventDefault();\n    const attachmenteRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      const response = await attachmenteRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = event => {\n    const {\n      target: {\n        files\n      }\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachmentClick = () => {\n    setAttachment(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: nweet,\n    onChange: onChange,\n    type: \"text\",\n    placeholder: \"What's on your mind?\",\n    maxLength: 120,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: onFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Nweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), attachment && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: attachment,\n    width: \"50px\",\n    height: \"50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClearAttachmentClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Clear\")));\n};\n\nexport default NweetFactory;","map":{"version":3,"sources":["/Users/salmon/GitSpace/study/React/nwitter/src/components/NweetFactory.js"],"names":["dbService","storageService","React","NweetFactory","userObj","onSubmit","event","preventDefault","attachmenteRef","ref","child","uid","uuidv4","attachmentUrl","attachment","response","putString","getDownloadURL","nweetObj","text","nweet","createdAt","Date","now","creatorId","collection","add","setNweet","setAttachment","onChange","target","value","onFileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","onClearAttachmentClick"],"mappings":"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","sourcesContent":["import { dbService, storageService } from \"fbase\";\nimport React from \"react\";\n\nconst NweetFactory = ({ userObj }) => {\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const attachmenteRef = storageService\n      .ref()\n      .child(`${userObj.uid}/${uuidv4()}`);\n\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const response = await attachmenteRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachmentClick = () => {\n    setAttachment(null);\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        value={nweet}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"What's on your mind?\"\n        maxLength={120}\n      />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Nweet\" />\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" height=\"50px\" />\n          <button onClick={onClearAttachmentClick}>Clear</button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n"]},"metadata":{},"sourceType":"module"}