{"ast":null,"code":"var _jsxFileName = \"/Users/salmon/GitSpace/study/React/nwitter/src/components/AuthForm.js\";\nimport { authService } from \"fbase\";\nimport React, { useState } from \"react\";\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      let data;\n\n      if (newAccount) {\n        //create account\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        // Log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount(prev => !prev);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    required: true,\n    value: email,\n    onChange: onChange,\n    className: \"authInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    required: true,\n    value: password,\n    onChange: onChange,\n    className: \"authInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"authInput authSubmit\",\n    value: newAccount ? \"Create Account\" : \"Sign In\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), error && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"authError\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, error)), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: toggleAccount,\n    className: \"authSwitch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, newAccount ? \"Create Account\" : \"Sign In\"));\n};\n\nexport default AuthForm;","map":{"version":3,"sources":["/Users/salmon/GitSpace/study/React/nwitter/src/components/AuthForm.js"],"names":["authService","React","useState","inputStyles","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","toggleAccount","prev"],"mappings":"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","sourcesContent":["import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        //create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // Log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Create Account\" : \"Sign In\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}