{"ast":null,"code":"var _jsxFileName = \"/Users/salmon/GitSpace/study/React/nwitter/src/routes/Home.js\";\nimport Nweet from \"components/Nweet\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\"; // export default () => <Span>Home</Span>;\n\nconst Home = ({\n  userObj\n}) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n  const [attachment, setAttachment] = useState(\"\"); //   const getNweets = async () => {\n  //     const dbNweets = await dbService.collection(\"nweets\").get();\n  //     dbNweets.forEach((document) => {\n  //       const nweetObject = {\n  //         ...document.data(),\n  //         id: document.id,\n  //       };\n  //       setNweets((prev) => [nweetObject, ...prev]);\n  //     });\n  //   };\n\n  useEffect(() => {\n    // getNweets();\n    dbService.collection(\"nweets\").onSnapshot(snapshot => {\n      const nweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    const attachmenteRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n    let attachmentUrl = \"\";\n\n    if (attachment !== \"\") {\n      const response = await attachmenteRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, nweets.map(nweet => /*#__PURE__*/React.createElement(Nweet, {\n    key: nweet.id,\n    nweetObj: nweet,\n    isOwner: nweet.creatorId === userObj.uid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/salmon/GitSpace/study/React/nwitter/src/routes/Home.js"],"names":["Nweet","dbService","storageService","React","useEffect","useState","v4","uuidv4","Home","userObj","nweet","setNweet","nweets","setNweets","attachment","setAttachment","collection","onSnapshot","snapshot","nweetArray","docs","map","doc","id","data","onSubmit","event","preventDefault","attachmenteRef","ref","child","uid","attachmentUrl","response","putString","getDownloadURL","nweetObj","text","createdAt","Date","now","creatorId","add"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,OAA1C;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B,C,CAEA;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C,CAH4B,CAK5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAH,IAAAA,SAAS,CAACe,UAAV,CAAqB,QAArB,EAA+BC,UAA/B,CAA2CC,QAAD,IAAc;AACtD,YAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAC7CC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADqC;AAE7C,WAAGD,GAAG,CAACE,IAAJ;AAF0C,OAAV,CAAlB,CAAnB;AAIAX,MAAAA,SAAS,CAACM,UAAD,CAAT;AACD,KAND;AAOD,GATQ,EASN,EATM,CAAT;;AAWA,QAAMM,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,cAAc,GAAG1B,cAAc,CAClC2B,GADoB,GAEpBC,KAFoB,CAEb,GAAErB,OAAO,CAACsB,GAAI,IAAGxB,MAAM,EAAG,EAFb,CAAvB;AAIA,QAAIyB,aAAa,GAAG,EAApB;;AACA,QAAIlB,UAAU,KAAK,EAAnB,EAAuB;AACrB,YAAMmB,QAAQ,GAAG,MAAML,cAAc,CAACM,SAAf,CAAyBpB,UAAzB,EAAqC,UAArC,CAAvB;AACAkB,MAAAA,aAAa,GAAG,MAAMC,QAAQ,CAACJ,GAAT,CAAaM,cAAb,EAAtB;AACD;;AACD,UAAMC,QAAQ,GAAG;AACfC,MAAAA,IAAI,EAAE3B,KADS;AAEf4B,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAFI;AAGfC,MAAAA,SAAS,EAAEhC,OAAO,CAACsB,GAHJ;AAIfC,MAAAA;AAJe,KAAjB;AAMA,UAAM/B,SAAS,CAACe,UAAV,CAAqB,QAArB,EAA+B0B,GAA/B,CAAmCN,QAAnC,CAAN;AACAzB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GApBD;;AAsBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,CAACS,GAAP,CAAYX,KAAD,iBACV,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACa,EADb;AAEE,IAAA,QAAQ,EAAEb,KAFZ;AAGE,IAAA,OAAO,EAAEA,KAAK,CAAC+B,SAAN,KAAoBhC,OAAO,CAACsB,GAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF;AAaD,CA9DD;;AAgEA,eAAevB,IAAf","sourcesContent":["import Nweet from \"components/Nweet\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// export default () => <Span>Home</Span>;\n\nconst Home = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n  const [attachment, setAttachment] = useState(\"\");\n\n  //   const getNweets = async () => {\n  //     const dbNweets = await dbService.collection(\"nweets\").get();\n  //     dbNweets.forEach((document) => {\n  //       const nweetObject = {\n  //         ...document.data(),\n  //         id: document.id,\n  //       };\n  //       setNweets((prev) => [nweetObject, ...prev]);\n  //     });\n  //   };\n\n  useEffect(() => {\n    // getNweets();\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const attachmenteRef = storageService\n      .ref()\n      .child(`${userObj.uid}/${uuidv4()}`);\n\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const response = await attachmenteRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  return (\n    <div>\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}