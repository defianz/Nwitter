{"ast":null,"code":"import _regeneratorRuntime from\"/Users/salmon/GitSpace/study/React/nwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/salmon/GitSpace/study/React/nwitter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import AuthForm from\"components/AuthForm\";import{authService,firebaseInstance}from\"fbase\";import React from\"react\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faTwitter,faGoogle,faGithub}from\"@fortawesome/free-brands-svg-icons\";// export default () => <Span>Auth</Span>;\nvar Auth=function Auth(){var onSocialClick=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var name,provider,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:name=event.target.name;if(name===\"google\"){provider=new firebaseInstance.auth.GoogleAuthProvider();}else if(name===\"github\"){provider=new firebaseInstance.auth.GithubAuthProvider();}_context.next=4;return authService.signInWithPopup(provider);case 4:data=_context.sent;console.log(data);case 6:case\"end\":return _context.stop();}}},_callee);}));return function onSocialClick(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"authContainer\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTwitter,color:\"#04AAFF\",size:\"3x\",style:{marginBottom:30}}),/*#__PURE__*/React.createElement(AuthForm,null),/*#__PURE__*/React.createElement(\"div\",{className:\"authBtns\"},/*#__PURE__*/React.createElement(\"button\",{onClick:onSocialClick,name:\"google\",className:\"authBtn\"},\"Continue with Google \",/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faGoogle})),/*#__PURE__*/React.createElement(\"button\",{onClick:onSocialClick,name:\"github\",className:\"authBtn\"},\"Continue with Github \",/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faGithub}))));};export default Auth;","map":{"version":3,"sources":["/Users/salmon/GitSpace/study/React/nwitter/src/routes/Auth.js"],"names":["AuthForm","authService","firebaseInstance","React","FontAwesomeIcon","faTwitter","faGoogle","faGithub","Auth","onSocialClick","event","name","target","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","console","log","marginBottom"],"mappings":"+TAAA,MAAOA,CAAAA,QAAP,KAAqB,qBAArB,CACA,OAASC,WAAT,CAAsBC,gBAAtB,KAA8C,OAA9C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OACEC,SADF,CAEEC,QAFF,CAGEC,QAHF,KAIO,oCAJP,CAMA;AAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjB,GAAMC,CAAAA,aAAa,0FAAG,iBAAOC,KAAP,yIAERC,IAFQ,CAGhBD,KAHgB,CAElBE,MAFkB,CAERD,IAFQ,CAKpB,GAAIA,IAAI,GAAK,QAAb,CAAuB,CACrBE,QAAQ,CAAG,GAAIX,CAAAA,gBAAgB,CAACY,IAAjB,CAAsBC,kBAA1B,EAAX,CACD,CAFD,IAEO,IAAIJ,IAAI,GAAK,QAAb,CAAuB,CAC5BE,QAAQ,CAAG,GAAIX,CAAAA,gBAAgB,CAACY,IAAjB,CAAsBE,kBAA1B,EAAX,CACD,CATmB,sBAUDf,CAAAA,WAAW,CAACgB,eAAZ,CAA4BJ,QAA5B,CAVC,QAUdK,IAVc,eAWpBC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAXoB,sDAAH,kBAAbT,CAAAA,aAAa,4CAAnB,CAcA,mBACE,2BAAK,SAAS,CAAC,eAAf,eACE,oBAAC,eAAD,EACE,IAAI,CAAEJ,SADR,CAEE,KAAK,CAAE,SAFT,CAGE,IAAI,CAAC,IAHP,CAIE,KAAK,CAAE,CAAEgB,YAAY,CAAE,EAAhB,CAJT,EADF,cAOE,oBAAC,QAAD,MAPF,cAQE,2BAAK,SAAS,CAAC,UAAf,eACE,8BAAQ,OAAO,CAAEZ,aAAjB,CAAgC,IAAI,CAAC,QAArC,CAA8C,SAAS,CAAC,SAAxD,uCACuB,oBAAC,eAAD,EAAiB,IAAI,CAAEH,QAAvB,EADvB,CADF,cAIE,8BAAQ,OAAO,CAAEG,aAAjB,CAAgC,IAAI,CAAC,QAArC,CAA8C,SAAS,CAAC,SAAxD,uCACuB,oBAAC,eAAD,EAAiB,IAAI,CAAEF,QAAvB,EADvB,CAJF,CARF,CADF,CAmBD,CAlCD,CAoCA,cAAeC,CAAAA,IAAf","sourcesContent":["import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\n// export default () => <Span>Auth</Span>;\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}