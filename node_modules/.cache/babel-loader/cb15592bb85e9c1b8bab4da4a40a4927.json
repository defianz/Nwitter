{"ast":null,"code":"var _jsxFileName = \"/Users/salmon/GitSpace/study/React/nwitter/src/routes/Auth.js\";\nimport AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React, { useState } from \"react\"; // export default () => <Span>Auth</Span>;\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      let data;\n\n      if (newAccount) {\n        //create account\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        // Log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount(prev => !prev);\n  };\n\n  const onSocialClick = async event => {\n    const {\n      target: {\n        name\n      }\n    } = event;\n    let provider;\n\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AuthForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    name: \"google\",\n    onClick: onSocialClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Continue with Google\"), /*#__PURE__*/React.createElement(\"button\", {\n    name: \"github\",\n    onClick: onSocialClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Continue with GitHub\")));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/salmon/GitSpace/study/React/nwitter/src/routes/Auth.js"],"names":["AuthForm","authService","firebaseInstance","React","useState","Auth","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","toggleAccount","prev","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup"],"mappings":"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","sourcesContent":["import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React, { useState } from \"react\";\n\n// export default () => <Span>Auth</Span>;\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        //create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // Log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button name=\"google\" onClick={onSocialClick}>\n          Continue with Google\n        </button>\n        <button name=\"github\" onClick={onSocialClick}>\n          Continue with GitHub\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}