{"ast":null,"code":"var _jsxFileName = \"/Users/salmon/GitSpace/study/React/nwitter/src/routes/Profile.js\";\nimport { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // export default () => <Span>Profile</Span>;\n\nexport default (({\n  userObj\n}) => {\n  const history = useHistory();\n  const [newDisplayname, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = event => {\n    setNewDisplayName(event.target.value);\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    if (userObj.displayName !== newDisplayname) {\n      //update\n      console.log(userObj);\n    }\n  };\n\n  const getMyNweets = async () => {\n    const nweets = await dbService.collection(\"nweets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createdAt\").get();\n    console.log(nweets.docs.map(doc => doc.data())); // console.log(nweets.docs.map((doc) => doc.data()));\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Display name\",\n    onChange: onChange,\n    value: newDisplayname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Update Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onLogOutClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Log Out\"));\n});","map":{"version":3,"sources":["/Users/salmon/GitSpace/study/React/nwitter/src/routes/Profile.js"],"names":["authService","dbService","React","useEffect","useState","useHistory","userObj","history","newDisplayname","setNewDisplayName","displayName","onLogOutClick","signOut","push","onChange","event","target","value","onSubmit","preventDefault","console","log","getMyNweets","nweets","collection","where","uid","orderBy","get","docs","map","doc","data"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;;AAEA,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC9B,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAACE,OAAO,CAACI,WAAT,CAApD;;AACA,QAAMC,aAAa,GAAG,MAAM;AAC1BX,IAAAA,WAAW,CAACY,OAAZ;AACAL,IAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1BN,IAAAA,iBAAiB,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAOH,KAAP,IAAiB;AAChCA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAIb,OAAO,CAACI,WAAR,KAAwBF,cAA5B,EAA4C;AAC1C;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AACD;AACF,GAND;;AAQA,QAAMgB,WAAW,GAAG,YAAY;AAC9B,UAAMC,MAAM,GAAG,MAAMtB,SAAS,CAC3BuB,UADkB,CACP,QADO,EAElBC,KAFkB,CAEZ,WAFY,EAEC,IAFD,EAEOnB,OAAO,CAACoB,GAFf,EAGlBC,OAHkB,CAGV,WAHU,EAIlBC,GAJkB,EAArB;AAKAR,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAM,CAACM,IAAP,CAAYC,GAAZ,CAAiBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAzB,CAAZ,EAN8B,CAO9B;AACD,GARD;;AASA7B,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE,uDACE;AAAM,IAAA,QAAQ,EAAEJ,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,QAAQ,EAAEJ,QAHZ;AAIE,IAAA,KAAK,EAAEN,cAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,eAUE;AAAQ,IAAA,OAAO,EAAEG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,CADF;AAcD,CA9CD","sourcesContent":["import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n// export default () => <Span>Profile</Span>;\n\nexport default ({ userObj }) => {\n  const history = useHistory();\n  const [newDisplayname, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    setNewDisplayName(event.target.value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayname) {\n      //update\n      console.log(userObj);\n    }\n  };\n\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    console.log(nweets.docs.map((doc) => doc.data()));\n    // console.log(nweets.docs.map((doc) => doc.data()));\n  };\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Display name\"\n          onChange={onChange}\n          value={newDisplayname}\n        />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}