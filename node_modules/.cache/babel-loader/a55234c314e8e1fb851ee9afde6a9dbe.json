{"ast":null,"code":"var _jsxFileName = \"/Users/salmon/GitSpace/study/React/nwitter/src/routes/Home.js\";\nimport Nweet from \"components/Nweet\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\"; // export default () => <Span>Home</Span>;\n\nconst Home = ({\n  userObj\n}) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n  const [attachment, setAttachment] = useState(); //   const getNweets = async () => {\n  //     const dbNweets = await dbService.collection(\"nweets\").get();\n  //     dbNweets.forEach((document) => {\n  //       const nweetObject = {\n  //         ...document.data(),\n  //         id: document.id,\n  //       };\n  //       setNweets((prev) => [nweetObject, ...prev]);\n  //     });\n  //   };\n\n  useEffect(() => {\n    // getNweets();\n    dbService.collection(\"nweets\").onSnapshot(snapshot => {\n      const nweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      console.log(nweetArray);\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n    const response = await fileRef.putString(attachment, \"data_url\");\n    console.log(await response.ref.getDownloadURL()); // await dbService.collection(\"nweets\").add({\n    //   text: nweet,\n    //   createdAt: Date.now(),\n    //   creatorId: userObj.uid,\n    // });\n    // setNweet(\"\");\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = event => {\n    const {\n      target: {\n        files\n      }\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      console.log(finishedEvent);\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachmentClick = () => {\n    setAttachment(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: nweet,\n    onChange: onChange,\n    type: \"text\",\n    placeholder: \"What's on your mind?\",\n    maxLength: 120,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: onFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Nweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), attachment && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: attachment,\n    width: \"50px\",\n    height: \"50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onClearAttachmentClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Clear\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, nweets.map(nweet => /*#__PURE__*/React.createElement(Nweet, {\n    key: nweet.id,\n    nweetObj: nweet,\n    isOwner: nweet.creatorId === userObj.uid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/salmon/GitSpace/study/React/nwitter/src/routes/Home.js"],"names":["Nweet","dbService","storageService","React","useEffect","useState","v4","uuidv4","Home","userObj","nweet","setNweet","nweets","setNweets","attachment","setAttachment","collection","onSnapshot","snapshot","nweetArray","docs","map","doc","id","data","console","log","onSubmit","event","preventDefault","fileRef","ref","child","uid","response","putString","getDownloadURL","onChange","target","value","onFileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","onClearAttachmentClick","creatorId"],"mappings":"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","sourcesContent":["import Nweet from \"components/Nweet\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// export default () => <Span>Home</Span>;\n\nconst Home = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [nweets, setNweets] = useState([]);\n  const [attachment, setAttachment] = useState();\n\n  //   const getNweets = async () => {\n  //     const dbNweets = await dbService.collection(\"nweets\").get();\n  //     dbNweets.forEach((document) => {\n  //       const nweetObject = {\n  //         ...document.data(),\n  //         id: document.id,\n  //       };\n  //       setNweets((prev) => [nweetObject, ...prev]);\n  //     });\n  //   };\n\n  useEffect(() => {\n    // getNweets();\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      console.log(nweetArray);\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n    const response = await fileRef.putString(attachment, \"data_url\");\n    console.log(await response.ref.getDownloadURL());\n    // await dbService.collection(\"nweets\").add({\n    //   text: nweet,\n    //   createdAt: Date.now(),\n    //   creatorId: userObj.uid,\n    // });\n    // setNweet(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      console.log(finishedEvent);\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachmentClick = () => {\n    setAttachment(null);\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n        <input type=\"submit\" value=\"Nweet\" />\n        {attachment && (\n          <div>\n            <img src={attachment} width=\"50px\" height=\"50px\" />\n            <button onClick={onClearAttachmentClick}>Clear</button>\n          </div>\n        )}\n      </form>\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}